{"version":3,"file":"src_app_views_wallet_wallet_module_ts.js","mappings":"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","sources":["./src/app/components/balance-summary-card/balance-summary-card.component.ts","./src/app/components/balance-summary-card/balance-summary-card.component.html","./src/app/components/balance-summary-card/balance-summary-card.module.ts","./src/app/components/pure-wallet-page/pure-wallet-page.component.ts","./src/app/components/pure-wallet-page/pure-wallet-page.component.html","./src/app/components/pure-wallet-page/pure-wallet-page.module.ts","./src/app/views/wallet/wallet-routing.module.ts","./src/app/views/wallet/wallet.module.ts","./src/app/views/wallet/wallet.page.ts","./src/app/views/wallet/wallet.page.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { AssetAmount } from 'src/app/utils/assets/assets.common';\n\n@Component({\n  selector: 'app-balance-summary-card',\n  templateUrl: './balance-summary-card.component.html',\n  styleUrls: ['./balance-summary-card.component.scss'],\n})\nexport class BalanceSummaryCardComponent implements OnInit {\n  @Input() balances?: AssetAmount[] | null;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","<ion-card class=\"app-item ion-text-center\">\n  <ion-card-header>\n    <ion-card-title class=\"font-nasalization\">Balances</ion-card-title>\n  </ion-card-header>\n\n  <ion-card-content>\n    <ion-list lines=\"none\">\n      <ion-grid>\n        <ng-container *ngFor=\"let balance of balances\">\n          <ion-row class=\"ion-align-items-center\">\n            <ion-col size=\"7\" class=\"ion-text-end\">\n              <ion-text color=\"white\" class=\"text-2xl font-audiowide\">\n                {{ balance | assetAmount }}\n              </ion-text>\n            </ion-col>\n            <ion-col size=\"5\" class=\"ion-text-start\">\n              <ion-text color=\"secondary\" class=\"font-bold\">\n                {{ balance | assetSymbol }}\n              </ion-text>\n            </ion-col>\n          </ion-row>\n        </ng-container>\n      </ion-grid>\n    </ion-list>\n  </ion-card-content>\n</ion-card>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { IonicModule } from '@ionic/angular';\nimport { AssetPipesModule } from 'src/app/pipes/asset-pipes.module';\nimport { BalanceSummaryCardComponent } from './balance-summary-card.component';\n\n@NgModule({\n  imports: [CommonModule, IonicModule, AssetPipesModule],\n  declarations: [BalanceSummaryCardComponent],\n  exports: [BalanceSummaryCardComponent],\n})\nexport class BalanceSummaryCardComponentModule {}\n","import { Component, Input, OnInit } from '@angular/core';\nimport {\n  faCreditCard,\n  faDonate,\n  faFingerprint,\n  faHandHoldingUsd,\n  faQrcode,\n  faReceipt,\n  faWallet,\n} from '@fortawesome/free-solid-svg-icons';\nimport { AssetAmount } from 'src/app/utils/assets/assets.common';\n\n/**\n * @see WalletPage\n */\n@Component({\n  selector: 'app-pure-wallet-page',\n  templateUrl: './pure-wallet-page.component.html',\n  styleUrls: ['./pure-wallet-page.component.scss'],\n})\nexport class PureWalletPageComponent implements OnInit {\n  /** Wallet owner's name. */\n  @Input() name?: string | null;\n\n  /** Wallet's balances. */\n  @Input() balances?: AssetAmount[] | null;\n\n  // Naming convention: Prefix action item parameters with \"action\".\n\n  /** \"Send Money\" action: Enabled? */\n  @Input() actionSendMoneyEnabled: boolean | null = true;\n\n  /** \"Top Up\" action: Optional external URL. */\n  @Input() actionTopUpUrl?: string | null;\n\n  /** \"Verify Profile\" action: Shown? */\n  @Input() actionVerifyProfileShown?: boolean | null;\n\n  /** \"Withdraw\" action: Optional external URL. */\n  @Input() actionWithdrawUrl?: string | null;\n\n  /** \"Receive\" action: Enabled? */\n  @Input() actionReceiveEnabled: boolean | null = false;\n\n  /** \"My Transactions\" action: Optional external URL. */\n  @Input() actionMyTransactionsUrl?: string | null;\n\n  icons = ICONS;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n\n// Placeholder icons until we get definite ones.\nconst ICONS = {\n  faCreditCard,\n  faDonate,\n  faFingerprint,\n  faHandHoldingUsd,\n  faQrcode,\n  faReceipt,\n  faWallet,\n};\n","<div class=\"ion-text-center p-2\">\n  <fa-icon [icon]=\"icons.faWallet\" size=\"5x\"></fa-icon>\n  <h1 class=\"font-semibold font-nasalization\">{{ name }}'s Wallet</h1>\n  <p>Send or receive money quickly and easily, select an option below</p>\n</div>\n\n<app-balance-summary-card [balances]=\"balances\"></app-balance-summary-card>\n\n<ion-list>\n  <app-action-item\n    title=\"Send Money\"\n    [icon]=\"icons.faCreditCard\"\n    path=\"/wallet/send-funds\"\n    [disabled]=\"!actionSendMoneyEnabled\"\n  ></app-action-item>\n\n  <app-action-item\n    *ngIf=\"actionTopUpUrl\"\n    title=\"Top Up Wallet\"\n    [icon]=\"icons.faDonate\"\n    [url]=\"actionTopUpUrl\"\n  ></app-action-item>\n\n  <app-action-item\n    *ngIf=\"actionVerifyProfileShown\"\n    title=\"Verify Profile\"\n    [icon]=\"icons.faFingerprint\"\n    path=\"/kyc\"\n  ></app-action-item>\n\n  <app-action-item\n    *ngIf=\"actionWithdrawUrl\"\n    title=\"Withdraw\"\n    [icon]=\"icons.faHandHoldingUsd\"\n    [url]=\"actionWithdrawUrl\"\n  ></app-action-item>\n\n  <app-action-item\n    title=\"Receive\"\n    [icon]=\"icons.faQrcode\"\n    path=\"/wallet/receive\"\n    [disabled]=\"!actionReceiveEnabled\"\n  ></app-action-item>\n\n  <app-action-item\n    *ngIf=\"actionMyTransactionsUrl\"\n    title=\"My Transactions\"\n    [icon]=\"icons.faReceipt\"\n    [url]=\"actionMyTransactionsUrl\"\n  ></app-action-item>\n</ion-list>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { IonicModule } from '@ionic/angular';\nimport { BalanceSummaryCardComponentModule } from 'src/app/components/balance-summary-card/balance-summary-card.module';\nimport { SharedModule } from 'src/app/modules/shared/shared.module';\nimport { PureWalletPageComponent } from './pure-wallet-page.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    SharedModule,\n    BalanceSummaryCardComponentModule,\n  ],\n  declarations: [PureWalletPageComponent],\n  exports: [PureWalletPageComponent],\n})\nexport class PureWalletPageComponentModule {}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { WalletPage } from './wallet.page';\n\nexport const routes: Routes = [\n  {\n    path: '',\n    component: WalletPage,\n  },\n  {\n    path: 'send-funds',\n    loadChildren: () =>\n      import('../send-funds/send-funds.module').then(\n        (m) => m.SendFundsPageModule\n      ),\n  },\n  {\n    path: 'receive',\n    loadChildren: () =>\n      import('../receive/receive.module').then((m) => m.ReceivePageModule),\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class WalletPageRoutingModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { IonicModule } from '@ionic/angular';\nimport { PureWalletPageComponentModule } from 'src/app/components/pure-wallet-page/pure-wallet-page.module';\nimport { SharedModule } from 'src/app/modules/shared/shared.module';\nimport { WalletPageRoutingModule } from './wallet-routing.module';\nimport { WalletPage } from './wallet.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    WalletPageRoutingModule,\n    SharedModule,\n    PureWalletPageComponentModule,\n  ],\n  declarations: [WalletPage],\n  exports: [WalletPage],\n})\nexport class WalletPageModule {}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { LoadingController, ToastController } from '@ionic/angular';\nimport { combineLatest, map, Observable } from 'rxjs';\nimport { checkTxResponseSucceeded } from 'src/app/services/xrpl.utils';\nimport { SessionAlgorandService } from 'src/app/state/session-algorand.service';\nimport { SessionXrplService } from 'src/app/state/session-xrpl.service';\nimport { SessionQuery } from 'src/app/state/session.query';\nimport { SessionService } from 'src/app/state/session.service';\nimport { AssetAmount } from 'src/app/utils/assets/assets.common';\nimport {\n  withConsoleGroup,\n  withConsoleGroupCollapsed,\n} from 'src/app/utils/console.helpers';\nimport { defined } from 'src/app/utils/errors/panic';\nimport { withLoadingOverlayOpts } from 'src/app/utils/loading.helpers';\nimport { SwalHelper } from 'src/app/utils/notification/swal-helper';\nimport { showToast } from 'src/app/utils/toast.helpers';\nimport { environment } from 'src/environments/environment';\nimport { WalletDisplay } from 'src/schema/entities';\n\n/**\n * @see PureWalletPageComponent\n */\n@Component({\n  selector: 'app-wallet',\n  templateUrl: './wallet.page.html',\n  styleUrls: ['./wallet.page.scss'],\n})\nexport class WalletPage implements OnInit {\n  /** (Optional) Hook to override environment setting, if given. */\n  @Input() requireKycBeforeSendPayment =\n    environment?.requireOnfidoCheckBeforeSendPayment;\n\n  /** Active wallet owner's name. */\n  name: Observable<WalletDisplay['owner_name'] | undefined> =\n    this.sessionQuery.name;\n\n  /** Active wallet's balances. */\n  balances: Observable<AssetAmount[]> = this.sessionQuery.allBalances;\n\n  /**\n   * Enable the \"Send Money\" action if both:\n   * - KYC status is either cleared or not required\n   * - At least one balance is available\n   */\n  actionSendMoneyEnabled: Observable<boolean> = combineLatest(\n    this.sessionQuery.onfidoCheckIsClear,\n    this.sessionQuery.allBalances\n  ).pipe(\n    map(\n      ([onfidoCheckIsClear, assetAmounts]) =>\n        (onfidoCheckIsClear || !this.requireKycBeforeSendPayment) &&\n        assetAmounts.length > 0\n    )\n  );\n\n  /** Show the \"Verify Profile\" if KYC status is not cleared. */\n  actionVerifyProfileShown: Observable<boolean> =\n    this.sessionQuery.onfidoCheckIsClear.pipe(\n      map((onfidoCheckIsClear: boolean) => !onfidoCheckIsClear)\n    );\n\n  constructor(\n    private loadingController: LoadingController,\n    public sessionQuery: SessionQuery,\n    public sessionService: SessionService,\n    public sessionAlgorandService: SessionAlgorandService,\n    public sessionXrplService: SessionXrplService,\n    private toastCtrl: ToastController,\n    private notification: SwalHelper\n  ) {}\n\n  /**\n   * When the wallet first displays, perform opportunistic asset opt-in.\n   */\n  async ngOnInit(): Promise<void> {\n    await this.refreshWalletData();\n  }\n\n  async onRefresh(): Promise<void> {\n    await withLoadingOverlayOpts(\n      this.loadingController,\n      { message: 'Refreshing…' },\n      async () => await this.refreshWalletData()\n    );\n  }\n\n  async refreshWalletData(): Promise<void> {\n    await withConsoleGroup('WalletPage.refreshWalletData:', async () => {\n      await withConsoleGroupCollapsed('Loading wallet data', async () => {\n        await Promise.all([\n          (async () => {\n            await this.sessionAlgorandService.loadAccountData();\n            await this.sessionAlgorandService.loadAssetParams();\n          })(),\n          this.sessionXrplService.loadAccountData(),\n          this.sessionService.loadOnfidoCheck(),\n        ]);\n      });\n      await withConsoleGroupCollapsed(\n        'Checking asset / token opt-ins',\n        async () => {\n          await this.checkAlgorandAssetOptIn();\n          await this.checkXrplTokenOptIns();\n        }\n      );\n      console.log('Done.');\n    });\n  }\n  /**\n   * Perform opportunistic Algorand asset opt-in.\n   *\n   * - If there's no Algo balance, show a suggestion to deposit.\n   * - If the account has an Algo balance but no asset balance, attempt to send an asset opt-in.\n   */\n  protected async checkAlgorandAssetOptIn(): Promise<void> {\n    if (\n      this.sessionQuery.hasAlgorandBalance() &&\n      // FIXME: Remove\n      environment.defaultAlgorandAssetId\n    ) {\n      const assetId = defined(environment.defaultAlgorandAssetId);\n      if (!this.sessionQuery.hasAlgorandAssetBalance(assetId)) {\n        const sending = await this.toast('Sending asset opt-in…');\n        try {\n          await this.sessionAlgorandService.sendAssetOptIn(assetId);\n        } catch (err) {\n          await sending.dismiss();\n          await this.errorNotification('Asset opt-in failed', err);\n          return;\n        }\n        await this.toast('Asset opt-in successful.');\n      }\n    }\n  }\n\n  /**\n   * Perform opportunistic XRPL token opt-in.\n   */\n  protected async checkXrplTokenOptIns(): Promise<void> {\n    if (this.sessionQuery.hasXrpBalance()) {\n      const txResponses = await this.sessionXrplService.checkTrustlineOptIns();\n      const unsuccessfulResponses = txResponses.filter((txResponse) => {\n        const { succeeded } = checkTxResponseSucceeded(txResponse);\n        return !succeeded;\n      });\n      if (0 < unsuccessfulResponses.length) {\n        console.log(\n          'WalletPage.checkXrplTokenOptIns: unsuccessful responses:',\n          { unsuccessfulResponses }\n        );\n        const errorMessage: string = unsuccessfulResponses\n          .map((txResponse) => {\n            const { resultCode } = checkTxResponseSucceeded(txResponse);\n            return resultCode;\n          })\n          .join('\\n');\n        await this.errorNotification('XRPL token opt-in failed', errorMessage);\n      }\n    }\n  }\n\n  protected async toast(message: string): Promise<HTMLIonToastElement> {\n    return showToast(this.toastCtrl, message, {\n      duration: 5000,\n    });\n  }\n\n  protected async errorNotification(\n    titleText: string,\n    err: any\n  ): Promise<void> {\n    const text = err?.response?.body?.message ?? err?.response?.body ?? err;\n    console.error('WalletPage.withAlertErrors caught', { err });\n    await this.notification.swal.fire({\n      icon: 'error',\n      titleText,\n      text,\n    });\n  }\n}\n","<ion-header class=\"ion-no-border\">\n  <app-header>\n    <ion-buttons slot=\"end\">\n      <ion-button (click)=\"onRefresh()\">Refresh</ion-button>\n    </ion-buttons>\n  </app-header>\n</ion-header>\n\n<ion-content>\n  <ion-grid fixed>\n    <app-pure-wallet-page\n      [name]=\"name | async\"\n      [balances]=\"balances | async\"\n      [actionSendMoneyEnabled]=\"actionSendMoneyEnabled | async\"\n      [actionVerifyProfileShown]=\"actionVerifyProfileShown | async\"\n    ></app-pure-wallet-page>\n  </ion-grid>\n</ion-content>\n"],"names":["combineLatest","map","checkTxResponseSucceeded","withConsoleGroup","withConsoleGroupCollapsed","defined","withLoadingOverlayOpts","showToast","environment","WalletPage","constructor","loadingController","sessionQuery","sessionService","sessionAlgorandService","sessionXrplService","toastCtrl","notification","requireOnfidoCheckBeforeSendPayment","name","allBalances","onfidoCheckIsClear","pipe","assetAmounts","requireKycBeforeSendPayment","length","ngOnInit","refreshWalletData","onRefresh","message","Promise","all","loadAccountData","loadAssetParams","loadOnfidoCheck","checkAlgorandAssetOptIn","checkXrplTokenOptIns","console","log","hasAlgorandBalance","defaultAlgorandAssetId","assetId","hasAlgorandAssetBalance","sending","toast","sendAssetOptIn","err","dismiss","errorNotification","hasXrpBalance","txResponses","checkTrustlineOptIns","unsuccessfulResponses","filter","txResponse","succeeded","errorMessage","resultCode","join","duration","titleText","text","response","_a","body","_b","_c","_d","_e","error","swal","fire","icon","i0","selectors","inputs","decls","vars","consts","template","ctx"],"sourceRoot":"webpack:///"}