{"version":3,"file":"src_app_views_print-wallet_print-wallet_module_ts.js","mappings":"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","sources":["./node_modules/@capacitor/clipboard/dist/esm/definitions.js","./node_modules/@capacitor/clipboard/dist/esm/index.js","./node_modules/@capacitor/clipboard/dist/esm/web.js","./src/app/views/print-wallet/print-wallet-routing.module.ts","./src/app/views/print-wallet/print-wallet.module.ts","./src/app/views/print-wallet/print-wallet.page.ts","./src/app/views/print-wallet/print-wallet.page.html"],"sourcesContent":["export {};\n","import { registerPlugin } from '@capacitor/core';\nimport { ClipboardWeb } from './web';\nconst Clipboard = registerPlugin('Clipboard', {\n    web: () => new ClipboardWeb(),\n});\nexport * from './definitions';\nexport { Clipboard };\n","import { WebPlugin } from '@capacitor/core';\nexport class ClipboardWeb extends WebPlugin {\n    async write(options) {\n        if (typeof navigator === 'undefined' || !navigator.clipboard) {\n            throw this.unavailable('Clipboard API not available in this browser');\n        }\n        if (options.string !== undefined) {\n            await this.writeText(options.string);\n        }\n        else if (options.url) {\n            await this.writeText(options.url);\n        }\n        else if (options.image) {\n            if (typeof ClipboardItem !== 'undefined') {\n                try {\n                    const blob = await (await fetch(options.image)).blob();\n                    const clipboardItemInput = new ClipboardItem({ [blob.type]: blob });\n                    await navigator.clipboard.write([clipboardItemInput]);\n                }\n                catch (err) {\n                    throw new Error('Failed to write image');\n                }\n            }\n            else {\n                throw this.unavailable('Writing images to the clipboard is not supported in this browser');\n            }\n        }\n        else {\n            throw new Error('Nothing to write');\n        }\n    }\n    async read() {\n        if (typeof navigator === 'undefined' || !navigator.clipboard) {\n            throw this.unavailable('Clipboard API not available in this browser');\n        }\n        if (typeof ClipboardItem !== 'undefined') {\n            try {\n                const clipboardItems = await navigator.clipboard.read();\n                const type = clipboardItems[0].types[0];\n                const clipboardBlob = await clipboardItems[0].getType(type);\n                const data = await this._getBlobData(clipboardBlob, type);\n                return { value: data, type };\n            }\n            catch (err) {\n                return this.readText();\n            }\n        }\n        else {\n            return this.readText();\n        }\n    }\n    async readText() {\n        if (typeof navigator === 'undefined' ||\n            !navigator.clipboard ||\n            !navigator.clipboard.readText) {\n            throw this.unavailable('Reading from clipboard not supported in this browser');\n        }\n        const text = await navigator.clipboard.readText();\n        return { value: text, type: 'text/plain' };\n    }\n    async writeText(text) {\n        if (typeof navigator === 'undefined' ||\n            !navigator.clipboard ||\n            !navigator.clipboard.writeText) {\n            throw this.unavailable('Writting to clipboard not supported in this browser');\n        }\n        await navigator.clipboard.writeText(text);\n    }\n    _getBlobData(clipboardBlob, type) {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            if (type.includes('image')) {\n                reader.readAsDataURL(clipboardBlob);\n            }\n            else {\n                reader.readAsText(clipboardBlob);\n            }\n            reader.onloadend = () => {\n                const r = reader.result;\n                resolve(r);\n            };\n            reader.onerror = e => {\n                reject(e);\n            };\n        });\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PrintWalletPage } from './print-wallet.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PrintWalletPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PrintWalletPageRoutingModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { SharedModule } from 'src/app/modules/shared/shared.module';\nimport { PrintWalletPageRoutingModule } from './print-wallet-routing.module';\nimport { PrintWalletPage } from './print-wallet.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PrintWalletPageRoutingModule,\n    SharedModule,\n  ],\n  declarations: [PrintWalletPage],\n})\nexport class PrintWalletPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Clipboard } from '@capacitor/clipboard';\nimport { ToastController } from '@ionic/angular';\nimport { SessionQuery } from 'src/app/state/session.query';\nimport { showToast } from 'src/app/utils/toast.helpers';\n\n@Component({\n  selector: 'app-print-wallet',\n  templateUrl: './print-wallet.page.html',\n  styleUrls: ['./print-wallet.page.scss'],\n})\nexport class PrintWalletPage implements OnInit {\n  // Hook for testing\n  public Clipboard = Clipboard;\n\n  constructor(\n    private toastCtrl: ToastController,\n    public sessionQuery: SessionQuery\n  ) {}\n\n  ngOnInit() {}\n\n  async copyAddress(address: string) {\n    await this.Clipboard.write({\n      // eslint-disable-next-line id-blacklist\n      string: address,\n    })\n      .then(() => {\n        this.notice('Address copied!');\n      })\n      .catch(() => {\n        this.notice('Something weird happened, please try again!');\n      });\n  }\n\n  async notice(message: string): Promise<HTMLIonToastElement> {\n    return showToast(this.toastCtrl, message, {\n      color: 'white',\n      duration: 2000,\n    });\n  }\n}\n","<ion-header class=\"ion-no-border\">\n  <ion-grid fixed>\n    <ion-toolbar>\n      <ion-buttons slot=\"start\">\n        <ion-button [routerLink]=\"['/']\">\n          <ion-icon name=\"close-circle-outline\" slot=\"icon-only\"></ion-icon>\n        </ion-button>\n      </ion-buttons>\n    </ion-toolbar>\n  </ion-grid>\n</ion-header>\n\n<ion-content>\n  <!-- TODO(Pi): Factor this out to component with walletId as input? -->\n  <ion-grid fixed *ngIf=\"sessionQuery.walletId | async as walletId\">\n    <ion-row id=\"print-section\">\n      <ion-col size=\"12\">\n        <qrcode\n          [qrdata]=\"walletId\"\n          errorCorrectionLevel=\"H\"\n          elementType=\"svg\"\n          cssClass=\"children:w-full children:h-auto\"\n          [margin]=\"2\"\n        ></qrcode>\n      </ion-col>\n      <ion-col size=\"12\" class=\"ion-text-center\">\n        <h2 class=\"font-nasalization\">Address</h2>\n        <div class=\"border-dashed border-2 rounded p-3 my-2\">\n          <ion-text class=\"font-bold\">{{walletId}}</ion-text>\n        </div>\n      </ion-col>\n    </ion-row>\n    <ion-row>\n      <ion-col>\n        <ion-button\n          id=\"copy-button\"\n          expand=\"block\"\n          fill=\"outline\"\n          color=\"white\"\n          shape=\"round\"\n          (click)=\"copyAddress(walletId)\"\n        >\n          <ion-icon name=\"copy-outline\"></ion-icon> Copy address\n        </ion-button>\n      </ion-col>\n      <ion-col>\n        <ion-button\n          expand=\"block\"\n          fill=\"outline\"\n          color=\"white\"\n          shape=\"round\"\n          ngxPrintItemButton\n          divID=\"print-section\"\n        >\n          <ion-icon name=\"print-outline\"></ion-icon> Print page\n        </ion-button>\n      </ion-col>\n    </ion-row>\n\n    <ion-button expand=\"block\" shape=\"round\" routerLink=\"/\">Home</ion-button>\n  </ion-grid>\n</ion-content>\n"],"names":["WebPlugin","ClipboardWeb","write","options","navigator","clipboard","unavailable","string","undefined","writeText","url","image","ClipboardItem","blob","fetch","clipboardItemInput","type","err","Error","read","clipboardItems","types","clipboardBlob","getType","data","_getBlobData","value","readText","text","Promise","resolve","reject","reader","FileReader","includes","readAsDataURL","readAsText","onloadend","r","result","onerror","e","Clipboard","showToast","i0","ctx_r2","PrintWalletPage","constructor","toastCtrl","sessionQuery","ngOnInit","copyAddress","address","then","notice","catch","message","color","duration","selectors","decls","vars","consts","template"],"sourceRoot":"webpack:///"}